import Header from "./components/Header";
import SearchSideBar from "./components/SearchSideBar";
import RestaurantCard from "./components/RestaurantCard";
import { GetServerSideProps, InferGetServerSidePropsType, Metadata } from "next";
import { Cuisine, Location, PRICE, PrismaClient } from "@prisma/client";

export const metadata: Metadata = {
  title: 'Search | OpenTable',
  description: 'Generated by create next app',
}

const prisma = new PrismaClient();

interface Restaurant {
  name: string
  main_image: string
  price: PRICE
  cuisine: Cuisine
  location: Location
}

export default async function Search({ searchParams }: { searchParams: { [key: string]: string } }) {
  const city = searchParams.city;

  const fetchSearchResult = async (): Promise<Restaurant[]> => {
    const restaurants = await prisma.restaurant.findMany({
      select: {
        name: true,
        main_image: true,
        price: true,
        cuisine: true,
        location: true,
      },
      where: {
        location: {
          is: {
            name: {
              contains: city,
              mode: 'insensitive',
            }
          }
        }
      }
    })

    if (!restaurants) {
      throw new Error();
    }

    return restaurants;
  }

  const restaurants = await fetchSearchResult();

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SearchSideBar />
        <div className="w-5/6">
          {restaurants.map((restaurant) => {
            return (
              <RestaurantCard restaurant={restaurant} />
            );
          })}
        </div>
      </div>
    </>
  )
}
